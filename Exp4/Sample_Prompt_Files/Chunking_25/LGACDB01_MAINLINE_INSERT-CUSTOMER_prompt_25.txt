translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
           MOVE ' INSERT CUSTOMER' TO EM-SQLREQ                         
           IF LGAC-NCS = 'ON'                                           
             DISPLAY "SNIPPET-1"
             IF SQLCODE NOT EQUAL 0                                     
               MOVE '90' TO CA-RETURN-CODE                              
               PERFORM WRITE-ERROR-MESSAGE                              
               EXEC CICS RETURN
               END-EXEC                                
             END-IF                                                     
           ELSE                                                         
             DISPLAY "SNIPPET-2"
             IF SQLCODE NOT EQUAL 0                                     
               MOVE '90' TO CA-RETURN-CODE                              
               PERFORM WRITE-ERROR-MESSAGE                              
               EXEC CICS RETURN
               END-EXEC                                
             END-IF                                                     
               EXEC SQL                                                 
                 SET :DB2-CUSTOMERNUM-INT = IDENTITY_VAL_LOCAL()        
               END-EXEC                                                 
           END-IF.                                                      
           MOVE DB2-CUSTOMERNUM-INT TO CA-CUSTOMER-NUM.                 
           EXIT.                                                        

## Variable Map:
LGAC-NCS gettermapping this.getLgacNcs()
LGAC-NCS settermapping this.setLgacNcs(val)
LGAC-NCS PIC X(2) JavaType String
EM-SQLREQ gettermapping errorMsg.getEmVariable().getEmSqlreq()
EM-SQLREQ settermapping errorMsg.getEmVariable().setEmSqlreq(val)
EM-SQLREQ PIC X(16) JavaType String
DB2-CUSTOMERNUM-INT gettermapping this.getDb2CustomernumInt()
DB2-CUSTOMERNUM-INT settermapping this.setDb2CustomernumInt(val)
DB2-CUSTOMERNUM-INT PIC S9(9) JavaType int
CA-RETURN-CODE gettermapping caCustomerRequest.getCaReturnCode()
CA-RETURN-CODE settermapping caCustomerRequest.setCaReturnCode(val)
CA-RETURN-CODE PIC 9(2) JavaType int
CA-CUSTOMER-NUM gettermapping caCustomerRequest.getCaCustomerNum()
CA-CUSTOMER-NUM settermapping caCustomerRequest.setCaCustomerNum(val)
CA-CUSTOMER-NUM PIC 9(10) JavaType long


## Class Map:
public void mainlineInsertCustomer(CaCustomerRequest caCustomerRequest){
    ErrorMsg errorMsg = new ErrorMsg();
}


Output:
=====================

translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
             EXEC SQL                                                   
               INSERT INTO CUSTOMER                                     
                         ( CUSTOMERNUMBER,                              
                           FIRSTNAME,                                   
                           LASTNAME,                                    
                           DATEOFBIRTH,                                 
                           HOUSENAME,                                   
                           HOUSENUMBER,                                 
                           POSTCODE,                                    
                           PHONEMOBILE,                                 
                           PHONEHOME,                                   
                           EMAILADDRESS )                               
                  VALUES ( :DB2-CUSTOMERNUM-INT,                        
                           :CA-FIRST-NAME,                              
                           :CA-LAST-NAME,                               
                           :CA-DOB,                                     
                           :CA-HOUSE-NAME,                              
                           :CA-HOUSE-NUM,                               
                           :CA-POSTCODE,                                
                           :CA-PHONE-MOBILE,                            
                           :CA-PHONE-HOME,                              
                           :CA-EMAIL-ADDRESS )                          
             END-EXEC                                                   

## Variable Map:
DB2-CUSTOMERNUM-INT gettermapping this.getDb2CustomernumInt()
DB2-CUSTOMERNUM-INT settermapping this.setDb2CustomernumInt(val)
DB2-CUSTOMERNUM-INT PIC S9(9) JavaType int
CA-POSTCODE gettermapping caCustomerRequest.getCustomer().getPostcode()
CA-POSTCODE settermapping caCustomerRequest.getCustomer().setPostcode(val)
CA-POSTCODE PIC X(8) JavaType String
CA-PHONE-MOBILE gettermapping caCustomerRequest.getCustomer().getPhonemobile()
CA-PHONE-MOBILE settermapping caCustomerRequest.getCustomer().setPhonemobile(val)
CA-PHONE-MOBILE PIC X(20) JavaType String
CA-PHONE-HOME gettermapping caCustomerRequest.getCustomer().getPhonehome()
CA-PHONE-HOME settermapping caCustomerRequest.getCustomer().setPhonehome(val)
CA-PHONE-HOME PIC X(20) JavaType String
CA-LAST-NAME gettermapping caCustomerRequest.getCustomer().getLastname()
CA-LAST-NAME settermapping caCustomerRequest.getCustomer().setLastname(val)
CA-LAST-NAME PIC X(20) JavaType String
CA-HOUSE-NUM gettermapping caCustomerRequest.getCustomer().getHousenumber()
CA-HOUSE-NUM settermapping caCustomerRequest.getCustomer().setHousenumber(val)
CA-HOUSE-NUM PIC X(4) JavaType String
CA-HOUSE-NAME gettermapping caCustomerRequest.getCustomer().getHousename()
CA-HOUSE-NAME settermapping caCustomerRequest.getCustomer().setHousename(val)
CA-HOUSE-NAME PIC X(20) JavaType String
CA-FIRST-NAME gettermapping caCustomerRequest.getCustomer().getFirstname()
CA-FIRST-NAME settermapping caCustomerRequest.getCustomer().setFirstname(val)
CA-FIRST-NAME PIC X(10) JavaType String
CA-EMAIL-ADDRESS gettermapping caCustomerRequest.getCustomer().getEmailaddress()
CA-EMAIL-ADDRESS settermapping caCustomerRequest.getCustomer().setEmailaddress(val)
CA-EMAIL-ADDRESS PIC X(100) JavaType String
CA-DOB gettermapping caCustomerRequest.getCustomer().getDateofbirth()
CA-DOB settermapping caCustomerRequest.getCustomer().setDateofbirth(val)
CA-DOB PIC X(10) JavaType Date


## Class Map:
public void mainlineInsertCustomer(CaCustomerRequest caCustomerRequest){
}


Output:
=====================

translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
             EXEC SQL                                                   
               INSERT INTO CUSTOMER                                     
                         ( CUSTOMERNUMBER,                              
                           FIRSTNAME,                                   
                           LASTNAME,                                    
                           DATEOFBIRTH,                                 
                           HOUSENAME,                                   
                           HOUSENUMBER,                                 
                           POSTCODE,                                    
                           PHONEMOBILE,                                 
                           PHONEHOME,                                   
                           EMAILADDRESS )                               
                  VALUES ( DEFAULT,                                     
                           :CA-FIRST-NAME,                              
                           :CA-LAST-NAME,                               
                           :CA-DOB,                                     
                           :CA-HOUSE-NAME,                              
                           :CA-HOUSE-NUM,                               
                           :CA-POSTCODE,                                
                           :CA-PHONE-MOBILE,                            
                           :CA-PHONE-HOME,                              
                           :CA-EMAIL-ADDRESS )                          
             END-EXEC                                                   

## Variable Map:
CA-POSTCODE gettermapping caCustomerRequest.getCustomer().getPostcode()
CA-POSTCODE settermapping caCustomerRequest.getCustomer().setPostcode(val)
CA-POSTCODE PIC X(8) JavaType String
CA-PHONE-MOBILE gettermapping caCustomerRequest.getCustomer().getPhonemobile()
CA-PHONE-MOBILE settermapping caCustomerRequest.getCustomer().setPhonemobile(val)
CA-PHONE-MOBILE PIC X(20) JavaType String
CA-PHONE-HOME gettermapping caCustomerRequest.getCustomer().getPhonehome()
CA-PHONE-HOME settermapping caCustomerRequest.getCustomer().setPhonehome(val)
CA-PHONE-HOME PIC X(20) JavaType String
CA-LAST-NAME gettermapping caCustomerRequest.getCustomer().getLastname()
CA-LAST-NAME settermapping caCustomerRequest.getCustomer().setLastname(val)
CA-LAST-NAME PIC X(20) JavaType String
CA-HOUSE-NUM gettermapping caCustomerRequest.getCustomer().getHousenumber()
CA-HOUSE-NUM settermapping caCustomerRequest.getCustomer().setHousenumber(val)
CA-HOUSE-NUM PIC X(4) JavaType String
CA-HOUSE-NAME gettermapping caCustomerRequest.getCustomer().getHousename()
CA-HOUSE-NAME settermapping caCustomerRequest.getCustomer().setHousename(val)
CA-HOUSE-NAME PIC X(20) JavaType String
CA-FIRST-NAME gettermapping caCustomerRequest.getCustomer().getFirstname()
CA-FIRST-NAME settermapping caCustomerRequest.getCustomer().setFirstname(val)
CA-FIRST-NAME PIC X(10) JavaType String
CA-EMAIL-ADDRESS gettermapping caCustomerRequest.getCustomer().getEmailaddress()
CA-EMAIL-ADDRESS settermapping caCustomerRequest.getCustomer().setEmailaddress(val)
CA-EMAIL-ADDRESS PIC X(100) JavaType String
CA-DOB gettermapping caCustomerRequest.getCustomer().getDateofbirth()
CA-DOB settermapping caCustomerRequest.getCustomer().setDateofbirth(val)
CA-DOB PIC X(10) JavaType Date


## Class Map:
public void mainlineInsertCustomer(CaCustomerRequest caCustomerRequest){
}


Output:
=====================

