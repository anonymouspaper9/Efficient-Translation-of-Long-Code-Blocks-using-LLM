translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
           DISPLAY "SNIPPET-1"
           DISPLAY "SNIPPET-2"
           If SQLCODE = 0                                               
             MOVE DB2-B-FirePeril-Int      TO DB2-B-FirePeril           
             MOVE DB2-B-FirePremium-Int    TO DB2-B-FirePremium         
             MOVE DB2-B-CrimePeril-Int     TO DB2-B-CrimePeril          
             MOVE DB2-B-CrimePremium-Int   TO DB2-B-CrimePremium        
             MOVE DB2-B-FloodPeril-Int     TO DB2-B-FloodPeril          
             MOVE DB2-B-FloodPremium-Int   TO DB2-B-FloodPremium        
             MOVE DB2-B-WeatherPeril-Int   TO DB2-B-WeatherPeril        
             MOVE DB2-B-WeatherPremium-Int TO DB2-B-WeatherPremium      
             MOVE DB2-B-Status-Int         TO DB2-B-Status              
             MOVE DB2-CustomerNum-Int      TO CA-CUSTOMER-NUM           
             MOVE DB2-PolicyNum-Int        TO CA-POLICY-NUM             
             MOVE DB2-POLICY-COMMON        TO CA-POLICY-COMMON          
             MOVE DB2-COMMERCIAL     TO CA-COMMERCIAL(1:WS-COMM-LEN)    
             Add 1 To ICOM-Record-Count                                 
             Set icom-pointer to address of CA-B-FILLER                 
             If ICOM-Record-Count > 20                                  
               Move 17 To SQLCODE                                       
             End-If                                                     
           End-If                                                       
           EXIT.                                                        

## Variable Map:
WS-COMM-LEN gettermapping wsCommLen
WS-COMM-LEN settermapping wsCommLen = val
WS-COMM-LEN PIC S9(4) JavaType int
ICOM-Record-Count gettermapping this.getIcomRecordCount()
ICOM-Record-Count settermapping this.setIcomRecordCount(val)
ICOM-Record-Count PIC S9(4) JavaType int
ICOM-Pointer gettermapping icomPointer
ICOM-Pointer settermapping icomPointer
ICOM-Pointer GROUP JavaType String
DB2-POLICYNUM-INT gettermapping db2InIntegers.getDb2PolicynumInt()
DB2-POLICYNUM-INT settermapping db2InIntegers.setDb2PolicynumInt(val)
DB2-POLICYNUM-INT PIC S9(9) JavaType int
DB2-POLICY-COMMON gettermapping db2Policy.getDb2PolicyCommon().getBytes()
DB2-POLICY-COMMON settermapping db2Policy.getDb2PolicyCommon().setBytes(val)
DB2-POLICY-COMMON GROUP JavaType Db2PolicyCommon
DB2-CUSTOMERNUM-INT gettermapping db2InIntegers.getDb2CustomernumInt()
DB2-CUSTOMERNUM-INT settermapping db2InIntegers.setDb2CustomernumInt(val)
DB2-CUSTOMERNUM-INT PIC S9(9) JavaType int
DB2-COMMERCIAL gettermapping db2Commercial.getBytes()
DB2-COMMERCIAL settermapping db2Commercial.setBytes(val)
DB2-COMMERCIAL GROUP JavaType Db2Commercial
DB2-B-WeatherPremium-Int gettermapping db2OutIntegers.getDb2BWeatherPremiumInt()
DB2-B-WeatherPremium-Int settermapping db2OutIntegers.setDb2BWeatherPremiumInt(val)
DB2-B-WeatherPremium-Int PIC S9(9) JavaType int
DB2-B-WeatherPremium gettermapping db2Commercial.getCommercial().getWeatherpremium()
DB2-B-WeatherPremium settermapping db2Commercial.getCommercial().setWeatherpremium(val)
DB2-B-WeatherPremium PIC 9(8) JavaType int
DB2-B-WeatherPeril-Int gettermapping db2OutIntegers.getDb2BWeatherPerilInt()
DB2-B-WeatherPeril-Int settermapping db2OutIntegers.setDb2BWeatherPerilInt(val)
DB2-B-WeatherPeril-Int PIC S9(4) JavaType int
DB2-B-WeatherPeril gettermapping db2Commercial.getCommercial().getWeatherperil()
DB2-B-WeatherPeril settermapping db2Commercial.getCommercial().setWeatherperil(val)
DB2-B-WeatherPeril PIC 9(4) JavaType int
DB2-B-Status-Int gettermapping db2OutIntegers.getDb2BStatusInt()
DB2-B-Status-Int settermapping db2OutIntegers.setDb2BStatusInt(val)
DB2-B-Status-Int PIC S9(4) JavaType int
DB2-B-Status gettermapping db2Commercial.getCommercial().getStatus()
DB2-B-Status settermapping db2Commercial.getCommercial().setStatus(val)
DB2-B-Status PIC 9(4) JavaType int
DB2-B-FloodPremium-Int gettermapping db2OutIntegers.getDb2BFloodPremiumInt()
DB2-B-FloodPremium-Int settermapping db2OutIntegers.setDb2BFloodPremiumInt(val)
DB2-B-FloodPremium-Int PIC S9(9) JavaType int
DB2-B-FloodPremium gettermapping db2Commercial.getCommercial().getFloodpremium()
DB2-B-FloodPremium settermapping db2Commercial.getCommercial().setFloodpremium(val)
DB2-B-FloodPremium PIC 9(8) JavaType int
DB2-B-FloodPeril-Int gettermapping db2OutIntegers.getDb2BFloodPerilInt()
DB2-B-FloodPeril-Int settermapping db2OutIntegers.setDb2BFloodPerilInt(val)
DB2-B-FloodPeril-Int PIC S9(4) JavaType int
DB2-B-FloodPeril gettermapping db2Commercial.getCommercial().getFloodperil()
DB2-B-FloodPeril settermapping db2Commercial.getCommercial().setFloodperil(val)
DB2-B-FloodPeril PIC 9(4) JavaType int
DB2-B-FirePremium-Int gettermapping db2OutIntegers.getDb2BFirePremiumInt()
DB2-B-FirePremium-Int settermapping db2OutIntegers.setDb2BFirePremiumInt(val)
DB2-B-FirePremium-Int PIC S9(9) JavaType int
DB2-B-FirePremium gettermapping db2Commercial.getCommercial().getFirepremium()
DB2-B-FirePremium settermapping db2Commercial.getCommercial().setFirepremium(val)
DB2-B-FirePremium PIC 9(8) JavaType int
DB2-B-FirePeril-Int gettermapping db2OutIntegers.getDb2BFirePerilInt()
DB2-B-FirePeril-Int settermapping db2OutIntegers.setDb2BFirePerilInt(val)
DB2-B-FirePeril-Int PIC S9(4) JavaType int
DB2-B-FirePeril gettermapping db2Commercial.getCommercial().getFireperil()
DB2-B-FirePeril settermapping db2Commercial.getCommercial().setFireperil(val)
DB2-B-FirePeril PIC 9(4) JavaType int
DB2-B-CrimePremium-Int gettermapping db2OutIntegers.getDb2BCrimePremiumInt()
DB2-B-CrimePremium-Int settermapping db2OutIntegers.setDb2BCrimePremiumInt(val)
DB2-B-CrimePremium-Int PIC S9(9) JavaType int
DB2-B-CrimePremium gettermapping db2Commercial.getCommercial().getCrimepremium()
DB2-B-CrimePremium settermapping db2Commercial.getCommercial().setCrimepremium(val)
DB2-B-CrimePremium PIC 9(8) JavaType int
DB2-B-CrimePeril-Int gettermapping db2OutIntegers.getDb2BCrimePerilInt()
DB2-B-CrimePeril-Int settermapping db2OutIntegers.setDb2BCrimePerilInt(val)
DB2-B-CrimePeril-Int PIC S9(4) JavaType int
DB2-B-CrimePeril gettermapping db2Commercial.getCommercial().getCrimeperil()
DB2-B-CrimePeril settermapping db2Commercial.getCommercial().setCrimeperil(val)
DB2-B-CrimePeril PIC 9(4) JavaType int
CA-POLICY-NUM gettermapping ((CaPolicyRequest)(dfhcommarea)).getPolicy().getPolicynumber()
CA-POLICY-NUM settermapping ((CaPolicyRequest)(dfhcommarea)).getPolicy().setPolicynumber(val)
CA-POLICY-NUM PIC 9(10) JavaType int
CA-POLICY-COMMON gettermapping ((CaPolicyRequest)(dfhcommarea)).getCaPolicyCommon().getBytes()
CA-POLICY-COMMON settermapping ((CaPolicyRequest)(dfhcommarea)).getCaPolicyCommon().setBytes(val)
CA-POLICY-COMMON GROUP JavaType CaPolicyCommon
CA-CUSTOMER-NUM gettermapping dfhcommarea.getCaCustomerNum()
CA-CUSTOMER-NUM settermapping dfhcommarea.setCaCustomerNum(val)
CA-CUSTOMER-NUM PIC 9(10) JavaType long
CA-COMMERCIAL gettermapping ((CaCommercial)(((CaPolicyRequest)(dfhcommarea)))).getBytes()
CA-COMMERCIAL settermapping ((CaCommercial)(((CaPolicyRequest)(dfhcommarea)))).setBytes(val)
CA-COMMERCIAL GROUP JavaType CaCommercial
CA-B-FILLER gettermapping ((CaCommercial)(((CaPolicyRequest)(dfhcommarea)))).getCaBFiller()
CA-B-FILLER settermapping ((CaCommercial)(((CaPolicyRequest)(dfhcommarea)))).setCaBFiller(val)
CA-B-FILLER PIC X(31298) JavaType String


## Class Map:
public void mainlineGetCommercialDb2Info3Cur(Db2Policy db2Policy, Dfhcommarea dfhcommarea, String icomPointer){
    Db2InIntegers db2InIntegers = new Db2InIntegers();
    Db2OutIntegers db2OutIntegers = new Db2OutIntegers();
    Db2Commercial db2Commercial = new Db2Commercial();
    int wsCommLen = 1102;
}


Output:
=====================

translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
           Set Address Of DFHCOMMAREA To ICOM-Pointer                   

## Variable Map:
ICOM-Pointer gettermapping icomPointer
ICOM-Pointer settermapping icomPointer
ICOM-Pointer GROUP JavaType String
DFHCOMMAREA gettermapping dfhcommarea.getBytes()
DFHCOMMAREA settermapping dfhcommarea.setBytes(val)
DFHCOMMAREA GROUP JavaType Dfhcommarea


## Class Map:
public void mainlineGetCommercialDb2Info3Cur(Db2Policy db2Policy, Dfhcommarea dfhcommarea, String icomPointer){
}


Output:
=====================

translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
           EXEC SQL                                                     
             Fetch Cust_Cursor                                          
             INTO                                                       
                   :DB2-CUSTOMERNUM-INT,                                
                   :DB2-POLICYNUM-INT,                                  
                   :DB2-LASTCHANGED,                                    
                   :DB2-ISSUEDATE,                                      
                   :DB2-EXPIRYDATE,                                     
                   :DB2-B-Address,                                      
                   :DB2-B-Postcode,                                     
                   :DB2-B-Latitude,                                     
                   :DB2-B-Longitude,                                    
                   :DB2-B-Customer,                                     
                   :DB2-B-PropType,                                     
                   :DB2-B-FirePeril-Int,                                
                   :DB2-B-FirePremium-Int,                              
                   :DB2-B-CrimePeril-Int,                               
                   :DB2-B-CrimePremium-Int,                             
                   :DB2-B-FloodPeril-Int,                               
                   :DB2-B-FloodPremium-Int,                             
                   :DB2-B-WeatherPeril-Int,                             
                   :DB2-B-WeatherPremium-Int,                           
                   :DB2-B-Status-Int,                                   
                   :DB2-B-RejectReason                                  
           END-EXEC                                                     

## Variable Map:
DB2-POLICYNUM-INT gettermapping db2InIntegers.getDb2PolicynumInt()
DB2-POLICYNUM-INT settermapping db2InIntegers.setDb2PolicynumInt(val)
DB2-POLICYNUM-INT PIC S9(9) JavaType int
DB2-LASTCHANGED gettermapping db2Policy.getPolicy().getLastchanged()
DB2-LASTCHANGED settermapping db2Policy.getPolicy().setLastchanged(val)
DB2-LASTCHANGED PIC X(26) JavaType Date
DB2-ISSUEDATE gettermapping db2Policy.getPolicy().getIssuedate()
DB2-ISSUEDATE settermapping db2Policy.getPolicy().setIssuedate(val)
DB2-ISSUEDATE PIC X(10) JavaType Date
DB2-EXPIRYDATE gettermapping db2Policy.getPolicy().getExpirydate()
DB2-EXPIRYDATE settermapping db2Policy.getPolicy().setExpirydate(val)
DB2-EXPIRYDATE PIC X(10) JavaType Date
DB2-CUSTOMERNUM-INT gettermapping db2InIntegers.getDb2CustomernumInt()
DB2-CUSTOMERNUM-INT settermapping db2InIntegers.setDb2CustomernumInt(val)
DB2-CUSTOMERNUM-INT PIC S9(9) JavaType int
DB2-B-WeatherPremium-Int gettermapping db2OutIntegers.getDb2BWeatherPremiumInt()
DB2-B-WeatherPremium-Int settermapping db2OutIntegers.setDb2BWeatherPremiumInt(val)
DB2-B-WeatherPremium-Int PIC S9(9) JavaType int
DB2-B-WeatherPeril-Int gettermapping db2OutIntegers.getDb2BWeatherPerilInt()
DB2-B-WeatherPeril-Int settermapping db2OutIntegers.setDb2BWeatherPerilInt(val)
DB2-B-WeatherPeril-Int PIC S9(4) JavaType int
DB2-B-Status-Int gettermapping db2OutIntegers.getDb2BStatusInt()
DB2-B-Status-Int settermapping db2OutIntegers.setDb2BStatusInt(val)
DB2-B-Status-Int PIC S9(4) JavaType int
DB2-B-RejectReason gettermapping db2Commercial.getCommercial().getRejectionreason()
DB2-B-RejectReason settermapping db2Commercial.getCommercial().setRejectionreason(val)
DB2-B-RejectReason PIC X(255) JavaType String
DB2-B-PropType gettermapping db2Commercial.getCommercial().getPropertytype()
DB2-B-PropType settermapping db2Commercial.getCommercial().setPropertytype(val)
DB2-B-PropType PIC X(255) JavaType String
DB2-B-Postcode gettermapping db2Commercial.getCommercial().getZipcode()
DB2-B-Postcode settermapping db2Commercial.getCommercial().setZipcode(val)
DB2-B-Postcode PIC X(8) JavaType String
DB2-B-Longitude gettermapping db2Commercial.getCommercial().getLongitudew()
DB2-B-Longitude settermapping db2Commercial.getCommercial().setLongitudew(val)
DB2-B-Longitude PIC X(11) JavaType String
DB2-B-Latitude gettermapping db2Commercial.getCommercial().getLatituden()
DB2-B-Latitude settermapping db2Commercial.getCommercial().setLatituden(val)
DB2-B-Latitude PIC X(11) JavaType String
DB2-B-FloodPremium-Int gettermapping db2OutIntegers.getDb2BFloodPremiumInt()
DB2-B-FloodPremium-Int settermapping db2OutIntegers.setDb2BFloodPremiumInt(val)
DB2-B-FloodPremium-Int PIC S9(9) JavaType int
DB2-B-FloodPeril-Int gettermapping db2OutIntegers.getDb2BFloodPerilInt()
DB2-B-FloodPeril-Int settermapping db2OutIntegers.setDb2BFloodPerilInt(val)
DB2-B-FloodPeril-Int PIC S9(4) JavaType int
DB2-B-FirePremium-Int gettermapping db2OutIntegers.getDb2BFirePremiumInt()
DB2-B-FirePremium-Int settermapping db2OutIntegers.setDb2BFirePremiumInt(val)
DB2-B-FirePremium-Int PIC S9(9) JavaType int
DB2-B-FirePeril-Int gettermapping db2OutIntegers.getDb2BFirePerilInt()
DB2-B-FirePeril-Int settermapping db2OutIntegers.setDb2BFirePerilInt(val)
DB2-B-FirePeril-Int PIC S9(4) JavaType int
DB2-B-Customer gettermapping db2Commercial.getCommercial().getCustomer()
DB2-B-Customer settermapping db2Commercial.getCommercial().setCustomer(val)
DB2-B-Customer PIC X(255) JavaType String
DB2-B-CrimePremium-Int gettermapping db2OutIntegers.getDb2BCrimePremiumInt()
DB2-B-CrimePremium-Int settermapping db2OutIntegers.setDb2BCrimePremiumInt(val)
DB2-B-CrimePremium-Int PIC S9(9) JavaType int
DB2-B-CrimePeril-Int gettermapping db2OutIntegers.getDb2BCrimePerilInt()
DB2-B-CrimePeril-Int settermapping db2OutIntegers.setDb2BCrimePerilInt(val)
DB2-B-CrimePeril-Int PIC S9(4) JavaType int
DB2-B-Address gettermapping db2Commercial.getCommercial().getAddress()
DB2-B-Address settermapping db2Commercial.getCommercial().setAddress(val)
DB2-B-Address PIC X(255) JavaType String


## Class Map:
public void mainlineGetCommercialDb2Info3Cur(Db2Policy db2Policy, Dfhcommarea dfhcommarea, String icomPointer){
    Db2InIntegers db2InIntegers = new Db2InIntegers();
    Db2Commercial db2Commercial = new Db2Commercial();
    Db2OutIntegers db2OutIntegers = new Db2OutIntegers();
}


Output:
=====================

