translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
       UAD010.
           MOVE 'N' TO COMM-SUCCESS.
           IF COMM-FACCNO = COMM-TACCNO
              AND COMM-FSCODE = COMM-TSCODE
              INITIALIZE ABNDINFO-REC
              MOVE EIBRESP    TO ABND-RESPCODE
              MOVE EIBRESP2   TO ABND-RESP2CODE
              EXEC CICS ASSIGN
                   APPLID(ABND-APPLID)
              END-EXEC
              MOVE EIBTASKN   TO ABND-TASKNO-KEY
              MOVE EIBTRNID   TO ABND-TRANID
              PERFORM POPULATE-TIME-DATE
              MOVE WS-ORIG-DATE TO ABND-DATE
              STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                    ':' DELIMITED BY SIZE,
                    WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                    ':' DELIMITED BY SIZE,
                    WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                    INTO ABND-TIME
              END-STRING
              MOVE WS-U-TIME   TO ABND-UTIME-KEY
              MOVE 'SAME'      TO ABND-CODE
              EXEC CICS ASSIGN
                   PROGRAM(ABND-PROGRAM)
              END-EXEC
              MOVE ZEROS      TO ABND-SQLCODE
              STRING 'UAD010 - Cannot transfer to the same account '
                   DELIMITED BY SIZE,
                   ' EIBRESP=' DELIMITED BY SIZE,
                   ABND-RESPCODE DELIMITED BY SIZE,
                   ' RESP2=' DELIMITED BY SIZE,
                   ABND-RESP2CODE DELIMITED BY SIZE
                   INTO ABND-FREEFORM
              END-STRING
              EXEC CICS LINK
                   COMMAREA(ABNDINFO-REC)
                   PROGRAM(WS-ABEND-PGM)
              END-EXEC
              DISPLAY 'Cannot transfer to the same account'
              EXEC CICS ABEND
                   NODUMP
                   CANCEL
                   ABCODE('SAME')
              END-EXEC
           END-IF.
           IF COMM-FACCNO < COMM-TACCNO
              MOVE COMM-FACCNO TO DESIRED-ACC-NO
              MOVE COMM-FSCODE TO DESIRED-SORT-CODE
              PERFORM UPDATE-ACCOUNT-DB2-FROM
              IF COMM-SUCCESS = 'Y'
                 MOVE COMM-TACCNO TO DESIRED-ACC-NO
                 MOVE COMM-TSCODE TO DESIRED-SORT-CODE
                 PERFORM UPDATE-ACCOUNT-DB2-TO
                 IF COMM-SUCCESS = 'N'
                    IF COMM-FAIL-CODE = '2'
                       EXEC CICS SYNCPOINT
                            ROLLBACK
                            RESP(WS-CICS-RESP)
                            RESP2(WS-CICS-RESP2)
                       END-EXEC
                       IF WS-CICS-RESP IS NOT EQUAL TO DFHRESP(NORMAL)
                          INITIALIZE ABNDINFO-REC
                          MOVE EIBRESP    TO ABND-RESPCODE
                          MOVE EIBRESP2   TO ABND-RESP2CODE
                          EXEC CICS ASSIGN
                               APPLID(ABND-APPLID)
                          END-EXEC
                          MOVE EIBTASKN   TO ABND-TASKNO-KEY
                          MOVE EIBTRNID   TO ABND-TRANID
                          PERFORM POPULATE-TIME-DATE
                          MOVE WS-ORIG-DATE TO ABND-DATE
                          STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                             ':' DELIMITED BY SIZE,
                             WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                             ':' DELIMITED BY SIZE,
                             WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                             INTO ABND-TIME
                          END-STRING
                          MOVE WS-U-TIME   TO ABND-UTIME-KEY
                          MOVE 'HROL'      TO ABND-CODE
                          EXEC CICS ASSIGN
                               PROGRAM(ABND-PROGRAM)
                          END-EXEC
                          MOVE ZEROS      TO ABND-SQLCODE
                          STRING 'UAD010(2) - Error on SYNCPOINT'
                             DELIMITED BY SIZE,
                             ' ROLLBACK' DELIMITED BY SIZE,
                             ' after UPDATING TO account '
                             DELIMITED BY SIZE,
                             ' EIBRESP=' DELIMITED BY SIZE,
                             ABND-RESPCODE DELIMITED BY SIZE,
                             ' RESP2=' DELIMITED BY SIZE,
                             ABND-RESP2CODE DELIMITED BY SIZE
                             INTO ABND-FREEFORM
                          END-STRING
                          EXEC CICS LINK
                               COMMAREA(ABNDINFO-REC)
                               PROGRAM(WS-ABEND-PGM)
                          END-EXEC
                          DISPLAY 'XFRFUN error syncpoint rollback'
                             ' after updating TO account '
                             ',RESP=' WS-CICS-RESP
                             ',RESP2=' WS-CICS-RESP2
                          EXEC CICS ABEND
                               NODUMP
                               CANCEL
                               ABCODE('HROL')
                          END-EXEC
                       END-IF
                       GO TO UAD999
                    ELSE
                       DISPLAY 'Error updating TO account'
                       EXEC CICS ABEND
                            NODUMP
                            ABCODE('TO  ')
                       END-EXEC
                    END-IF
                 END-IF
              ELSE
                 IF COMM-FAIL-CODE = '1'
                    EXEC CICS SYNCPOINT
                         ROLLBACK
                         RESP(WS-CICS-RESP)
                         RESP2(WS-CICS-RESP2)
                    END-EXEC
                    IF WS-CICS-RESP IS NOT EQUAL TO DFHRESP(NORMAL)
                       DISPLAY 'XFRFUN error syncpoint '
                          ' rollback after '
                          'updating FROM account '
                          ',RESP=' WS-CICS-RESP
                          ',RESP2=' WS-CICS-RESP2
                       EXEC CICS ABEND
                            NODUMP
                            ABCODE('HROL')
                       END-EXEC
                    END-IF
                    GO TO UAD999
                 ELSE
                    INITIALIZE ABNDINFO-REC
                    MOVE EIBRESP    TO ABND-RESPCODE
                    MOVE EIBRESP2   TO ABND-RESP2CODE
                    EXEC CICS ASSIGN
                         APPLID(ABND-APPLID)
                    END-EXEC
                    MOVE EIBTASKN   TO ABND-TASKNO-KEY
                    MOVE EIBTRNID   TO ABND-TRANID
                    PERFORM POPULATE-TIME-DATE
                    MOVE WS-ORIG-DATE TO ABND-DATE
                    STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                        ':' DELIMITED BY SIZE,
                        WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                        ':' DELIMITED BY SIZE,
                        WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                        INTO ABND-TIME
                    END-STRING
                    MOVE WS-U-TIME   TO ABND-UTIME-KEY
                    MOVE 'FROM'      TO ABND-CODE
                    EXEC CICS ASSIGN
                         PROGRAM(ABND-PROGRAM)
                    END-EXEC
                    MOVE ZEROS      TO ABND-SQLCODE
                    STRING 'UAD010(3) - Error updating FROM account '
                       DELIMITED BY SIZE,
                       ' EIBRESP=' DELIMITED BY SIZE,
                       ABND-RESPCODE DELIMITED BY SIZE,
                       ' RESP2=' DELIMITED BY SIZE,
                       ABND-RESP2CODE DELIMITED BY SIZE
                       INTO ABND-FREEFORM
                    END-STRING
                    EXEC CICS LINK
                         COMMAREA(ABNDINFO-REC)
                         PROGRAM(WS-ABEND-PGM)
                    END-EXEC
                    DISPLAY 'Error updating FROM account'
                    EXEC CICS ABEND
                         NODUMP
                         CANCEL
                         ABCODE('FROM')
                    END-EXEC
                 END-IF
              END-IF
           ELSE
              MOVE COMM-TACCNO TO DESIRED-ACC-NO
              MOVE COMM-TSCODE TO DESIRED-SORT-CODE
              PERFORM UPDATE-ACCOUNT-DB2-TO
              IF COMM-SUCCESS = 'Y'
                 MOVE COMM-FACCNO TO DESIRED-ACC-NO
                 MOVE COMM-FSCODE TO DESIRED-SORT-CODE
                 PERFORM UPDATE-ACCOUNT-DB2-FROM
                 IF COMM-SUCCESS = 'N'
                    IF COMM-FAIL-CODE NOT = '1'
                       INITIALIZE ABNDINFO-REC
                       MOVE EIBRESP    TO ABND-RESPCODE
                       MOVE EIBRESP2   TO ABND-RESP2CODE
                       EXEC CICS ASSIGN
                            APPLID(ABND-APPLID)
                       END-EXEC
                       MOVE EIBTASKN   TO ABND-TASKNO-KEY
                       MOVE EIBTRNID   TO ABND-TRANID
                       PERFORM POPULATE-TIME-DATE
                       MOVE WS-ORIG-DATE TO ABND-DATE
                       STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                          ':' DELIMITED BY SIZE,
                          WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                          ':' DELIMITED BY SIZE,
                          WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                          INTO ABND-TIME
                       END-STRING
                       MOVE WS-U-TIME   TO ABND-UTIME-KEY
                       MOVE 'FROM'      TO ABND-CODE
                       EXEC CICS ASSIGN
                            PROGRAM(ABND-PROGRAM)
                       END-EXEC
                       MOVE ZEROS      TO ABND-SQLCODE
                       STRING 'UAD010(4) - Error updating FROM account '
                          DELIMITED BY SIZE,
                          ' EIBRESP=' DELIMITED BY SIZE,
                          ABND-RESPCODE DELIMITED BY SIZE,
                          ' RESP2=' DELIMITED BY SIZE,
                          ABND-RESP2CODE DELIMITED BY SIZE
                          INTO ABND-FREEFORM
                       END-STRING
                       EXEC CICS LINK
                            COMMAREA(ABNDINFO-REC)
                            PROGRAM(WS-ABEND-PGM)
                       END-EXEC
                       DISPLAY 'Error updating FROM account'
                       EXEC CICS ABEND
                            NODUMP
                            CANCEL
                            ABCODE('FROM')
                       END-EXEC
                    ELSE
                       EXEC CICS SYNCPOINT
                            ROLLBACK
                            RESP(WS-CICS-RESP)
                            RESP2(WS-CICS-RESP2)
                       END-EXEC
                       IF WS-CICS-RESP IS NOT EQUAL TO DFHRESP(NORMAL)
                          INITIALIZE ABNDINFO-REC
                          MOVE EIBRESP    TO ABND-RESPCODE
                          MOVE EIBRESP2   TO ABND-RESP2CODE
                          EXEC CICS ASSIGN
                               APPLID(ABND-APPLID)
                          END-EXEC
                          MOVE EIBTASKN   TO ABND-TASKNO-KEY
                          MOVE EIBTRNID   TO ABND-TRANID
                          PERFORM POPULATE-TIME-DATE
                          MOVE WS-ORIG-DATE TO ABND-DATE
                          STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                             ':' DELIMITED BY SIZE,
                              WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                              ':' DELIMITED BY SIZE,
                              WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                              INTO ABND-TIME
                          END-STRING
                          MOVE WS-U-TIME   TO ABND-UTIME-KEY
                          MOVE 'HROL'      TO ABND-CODE
                          EXEC CICS ASSIGN
                               PROGRAM(ABND-PROGRAM)
                          END-EXEC
                          MOVE ZEROS      TO ABND-SQLCODE
                          STRING 'UAD010(5) - Error on SYNCPOINT '
                             DELIMITED BY SIZE,
                             ' ROLLBACK ' DELIMITED BY SIZE,
                             ' after UPDATING the FROM account'
                             DELIMITED BY SIZE,
                             ' EIBRESP=' DELIMITED BY SIZE,
                             ABND-RESPCODE DELIMITED BY SIZE,
                             ' RESP2=' DELIMITED BY SIZE,
                             ABND-RESP2CODE DELIMITED BY SIZE
                             INTO ABND-FREEFORM
                          END-STRING
                          EXEC CICS LINK
                               COMMAREA(ABNDINFO-REC)
                               PROGRAM(WS-ABEND-PGM)
                          END-EXEC
                          DISPLAY 'XFRFUN error syncpoint '
                             ' rollback after '
                             'updating FROM account '
                             ',RESP=' WS-CICS-RESP
                             ',RESP2=' WS-CICS-RESP2
                          EXEC CICS ABEND
                               NODUMP
                               CANCEL
                               ABCODE('HROL')
                          END-EXEC
                       END-IF
                       GO TO UAD999
                    END-IF
                 END-IF
              ELSE
                 IF COMM-FAIL-CODE NOT = '2'
                    INITIALIZE ABNDINFO-REC
                    MOVE EIBRESP    TO ABND-RESPCODE
                    MOVE EIBRESP2   TO ABND-RESP2CODE
                    EXEC CICS ASSIGN
                         APPLID(ABND-APPLID)
                    END-EXEC
                    MOVE EIBTASKN   TO ABND-TASKNO-KEY
                    MOVE EIBTRNID   TO ABND-TRANID
                    PERFORM POPULATE-TIME-DATE
                    MOVE WS-ORIG-DATE TO ABND-DATE
                    STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                       ':' DELIMITED BY SIZE,
                       WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                       ':' DELIMITED BY SIZE,
                       WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                       INTO ABND-TIME
                    END-STRING
                    MOVE WS-U-TIME   TO ABND-UTIME-KEY
                    MOVE 'TO  '      TO ABND-CODE
                    EXEC CICS ASSIGN
                         PROGRAM(ABND-PROGRAM)
                    END-EXEC
                    MOVE ZEROS      TO ABND-SQLCODE
                    STRING 'UAD010(6) - Error updating TO account '
                       DELIMITED BY SIZE,
                       ' EIBRESP=' DELIMITED BY SIZE,
                       ABND-RESPCODE DELIMITED BY SIZE,
                       ' RESP2=' DELIMITED BY SIZE,
                       ABND-RESP2CODE DELIMITED BY SIZE
                       INTO ABND-FREEFORM
                    END-STRING
                    EXEC CICS LINK
                         COMMAREA(ABNDINFO-REC)
                         PROGRAM(WS-ABEND-PGM)
                    END-EXEC
                    DISPLAY 'Error updating TO account'
                    EXEC CICS ABEND
                         CANCEL
                         NODUMP
                         ABCODE('TO  ')
                    END-EXEC
                 ELSE
                    EXEC CICS SYNCPOINT
                         ROLLBACK
                         RESP(WS-CICS-RESP)
                         RESP2(WS-CICS-RESP2)
                    END-EXEC
                    IF WS-CICS-RESP IS NOT EQUAL TO DFHRESP(NORMAL)
                       INITIALIZE ABNDINFO-REC
                       MOVE EIBRESP    TO ABND-RESPCODE
                       MOVE EIBRESP2   TO ABND-RESP2CODE
                       EXEC CICS ASSIGN
                            APPLID(ABND-APPLID)
                       END-EXEC
                       MOVE EIBTASKN   TO ABND-TASKNO-KEY
                       MOVE EIBTRNID   TO ABND-TRANID
                       PERFORM POPULATE-TIME-DATE
                       MOVE WS-ORIG-DATE TO ABND-DATE
                       STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                          ':' DELIMITED BY SIZE,
                          WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                          ':' DELIMITED BY SIZE,
                          WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                          INTO ABND-TIME
                       END-STRING
                       MOVE WS-U-TIME   TO ABND-UTIME-KEY
                       MOVE 'HROL'      TO ABND-CODE
                       EXEC CICS ASSIGN
                            PROGRAM(ABND-PROGRAM)
                       END-EXEC
                       MOVE ZEROS      TO ABND-SQLCODE
                       STRING 'UAD010(7) - Error on SYNCPOINT ROLLBACK'
                          DELIMITED BY SIZE,
                          ' after UPDATING the TO account'
                          DELIMITED BY SIZE,
                          ' EIBRESP=' DELIMITED BY SIZE,
                          ABND-RESPCODE DELIMITED BY SIZE,
                          ' RESP2=' DELIMITED BY SIZE,
                          ABND-RESP2CODE DELIMITED BY SIZE
                          INTO ABND-FREEFORM
                       END-STRING
                       EXEC CICS LINK
                            COMMAREA(ABNDINFO-REC)
                            PROGRAM(WS-ABEND-PGM)
                       END-EXEC
                       DISPLAY 'XFRFUN error syncpoint rollback after '
                           'updating TO account '
                           ',RESP=' WS-CICS-RESP
                           ',RESP2=' WS-CICS-RESP2
                       EXEC CICS ABEND
                            NODUMP
                            CANCEL
                            ABCODE('HROL')
                       END-EXEC
                    END-IF
                    GO TO UAD999
                 END-IF
              END-IF
           END-IF.
           PERFORM WRITE-TO-PROCTRAN.
           MOVE 'Y' TO COMM-SUCCESS.

## Variable Map:
WS-U-TIME gettermapping this.getWsUTime()
WS-U-TIME settermapping this.setWsUTime(val)
WS-U-TIME PIC S9(15) JavaType long
WS-TIME-NOW-GRP-MM gettermapping wsTimeNowGrp.getWsTimeNowGrpMm()
WS-TIME-NOW-GRP-MM settermapping wsTimeNowGrp.setWsTimeNowGrpMm(val)
WS-TIME-NOW-GRP-MM PIC 99 JavaType int
WS-TIME-NOW-GRP-HH gettermapping wsTimeNowGrp.getWsTimeNowGrpHh()
WS-TIME-NOW-GRP-HH settermapping wsTimeNowGrp.setWsTimeNowGrpHh(val)
WS-TIME-NOW-GRP-HH PIC 99 JavaType int
WS-ORIG-DATE gettermapping this.getWsOrigDate()
WS-ORIG-DATE settermapping this.setWsOrigDate(val)
WS-ORIG-DATE PIC X(10) JavaType String
WS-CICS-RESP2 gettermapping wsCicsResp2
WS-CICS-RESP2 settermapping wsCicsResp2 = val
WS-CICS-RESP2 PIC S9(8) JavaType int
WS-CICS-RESP gettermapping wsCicsResp
WS-CICS-RESP settermapping wsCicsResp = val
WS-CICS-RESP PIC S9(8) JavaType int
WS-ABEND-PGM gettermapping wsAbendPgm
WS-ABEND-PGM settermapping wsAbendPgm = val
WS-ABEND-PGM PIC X(8) JavaType String
DESIRED-SORT-CODE gettermapping desiredSortCode
DESIRED-SORT-CODE settermapping desiredSortCode = val
DESIRED-SORT-CODE PIC 9(6) JavaType int
DESIRED-ACC-NO gettermapping desiredAccNo
DESIRED-ACC-NO settermapping desiredAccNo = val
DESIRED-ACC-NO PIC 9(8) JavaType int
COMM-TSCODE gettermapping dfhcommarea.getCommTscode()
COMM-TSCODE settermapping dfhcommarea.setCommTscode(val)
COMM-TSCODE PIC 9(6) JavaType int
COMM-TACCNO gettermapping dfhcommarea.getCommTaccno()
COMM-TACCNO settermapping dfhcommarea.setCommTaccno(val)
COMM-TACCNO PIC 9(8) JavaType int
COMM-SUCCESS gettermapping dfhcommarea.getCommSuccess()
COMM-SUCCESS settermapping dfhcommarea.setCommSuccess(val)
COMM-SUCCESS PIC X JavaType char
COMM-FSCODE gettermapping dfhcommarea.getCommFscode()
COMM-FSCODE settermapping dfhcommarea.setCommFscode(val)
COMM-FSCODE PIC 9(6) JavaType int
COMM-FAIL-CODE gettermapping dfhcommarea.getCommFailCode()
COMM-FAIL-CODE settermapping dfhcommarea.setCommFailCode(val)
COMM-FAIL-CODE PIC X JavaType char
COMM-FACCNO gettermapping dfhcommarea.getCommFaccno()
COMM-FACCNO settermapping dfhcommarea.setCommFaccno(val)
COMM-FACCNO PIC 9(8) JavaType int
ABNDINFO-REC gettermapping abndinfoRec.getBytes()
ABNDINFO-REC settermapping abndinfoRec.setBytes(val)
ABNDINFO-REC GROUP JavaType AbndinfoRec
ABND-UTIME-KEY gettermapping abndinfoRec.getAbndUtimeKey()
ABND-UTIME-KEY settermapping abndinfoRec.setAbndUtimeKey(val)
ABND-UTIME-KEY PIC S9(15) JavaType long
ABND-TRANID gettermapping abndinfoRec.getAbndTranid()
ABND-TRANID settermapping abndinfoRec.setAbndTranid(val)
ABND-TRANID PIC X(4) JavaType String
ABND-TIME gettermapping abndinfoRec.getAbndTime()
ABND-TIME settermapping abndinfoRec.setAbndTime(val)
ABND-TIME PIC X(8) JavaType String
ABND-TASKNO-KEY gettermapping abndinfoRec.getAbndTasknoKey()
ABND-TASKNO-KEY settermapping abndinfoRec.setAbndTasknoKey(val)
ABND-TASKNO-KEY PIC 9(4) JavaType int
ABND-SQLCODE gettermapping abndinfoRec.getAbndSqlcode()
ABND-SQLCODE settermapping abndinfoRec.setAbndSqlcode(val)
ABND-SQLCODE PIC S9(8) JavaType int
ABND-RESPCODE gettermapping abndinfoRec.getAbndRespcode()
ABND-RESPCODE settermapping abndinfoRec.setAbndRespcode(val)
ABND-RESPCODE PIC S9(8) JavaType int
ABND-RESP2CODE gettermapping abndinfoRec.getAbndResp2Code()
ABND-RESP2CODE settermapping abndinfoRec.setAbndResp2Code(val)
ABND-RESP2CODE PIC S9(8) JavaType int
ABND-PROGRAM gettermapping abndinfoRec.getAbndProgram()
ABND-PROGRAM settermapping abndinfoRec.setAbndProgram(val)
ABND-PROGRAM PIC X(8) JavaType String
ABND-FREEFORM gettermapping abndinfoRec.getAbndFreeform()
ABND-FREEFORM settermapping abndinfoRec.setAbndFreeform(val)
ABND-FREEFORM PIC X(600) JavaType String
ABND-DATE gettermapping abndinfoRec.getAbndDate()
ABND-DATE settermapping abndinfoRec.setAbndDate(val)
ABND-DATE PIC X(10) JavaType String
ABND-CODE gettermapping abndinfoRec.getAbndCode()
ABND-CODE settermapping abndinfoRec.setAbndCode(val)
ABND-CODE PIC X(4) JavaType String
ABND-APPLID gettermapping abndinfoRec.getAbndApplid()
ABND-APPLID settermapping abndinfoRec.setAbndApplid(val)
ABND-APPLID PIC X(8) JavaType String
WRITE-TO-PROCTRAN_WTP010, writeToProctranWtp010(dfhcommarea, sqlcodeDisplay)
UPDATE-ACCOUNT-DB2-TO_UADT010, updateAccountDb2ToUadt010(dfhcommarea)
UPDATE-ACCOUNT-DB2-FROM_UADF010, updateAccountDb2FromUadf010(dfhcommarea, sqlcodeDisplay)
POPULATE-TIME-DATE_PTD010, populateTimeDatePtd010()

## Class Map:
public void updateAccountDb2Uad010(Dfhcommarea dfhcommarea, int sqlcodeDisplay){
    AbndinfoRec abndinfoRec = new AbndinfoRec();
    int desiredAccNo;
    int desiredSortCode;
    String wsAbendPgm = "ABNDPROC";
    int wsCicsResp;
    int wsCicsResp2;
    WsTimeNowGrp wsTimeNowGrp = new WsTimeNowGrp();
}


Output:
