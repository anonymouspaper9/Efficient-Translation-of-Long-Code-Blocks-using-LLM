translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
       MAINLINE SECTION.                                                
           MOVE SPACES TO WRITE-MSG.                                    
           MOVE SPACES TO WS-RECV.                                      
           EXEC CICS ASSIGN
                RESP(WS-RESP)
                SYSID(WRITE-MSG-SYSID)
           END-EXEC.                                                    
           EXEC CICS ASSIGN
                RESP(WS-RESP)
                STARTCODE(WS-STARTCODE)
           END-EXEC.                                                    
           EXEC CICS ASSIGN
                PRINSYSID(WS-PRINSYSID)
                RESP(WS-RESP)
           END-EXEC.                                                    
           EXEC CICS ASSIGN
                INVOKINGPROG(WS-INVOKEPROG)
                RESP(WS-RESP)
           END-EXEC.                                                    
           IF WS-INVOKEPROG NOT = SPACES                                
              MOVE 'C' To WS-FLAG                                       
              MOVE COMMA-DATA  TO WRITE-MSG-MSG                         
              MOVE EIBCALEN    TO WS-RECV-LEN                           
           ELSE                                                         
              EXEC CICS RECEIVE
                   INTO(WS-RECV)
                   LENGTH(WS-RECV-LEN)
                   RESP(WS-RESP)
              END-EXEC                                                  
              MOVE 'R' To WS-FLAG                                       
              MOVE WS-RECV-DATA  TO WRITE-MSG-MSG                       
              SUBTRACT 5 FROM WS-RECV-LEN                               
           END-IF.                                                      
           MOVE 'GENAERRS' TO STSQ-NAME.                                
           IF WRITE-MSG-MSG(1:2) = 'Q=' THEN                            
              MOVE WRITE-MSG-MSG(3:4) TO STSQ-EXT                       
              MOVE WRITE-MSG-REST TO TEMPO                              
              MOVE TEMPO          TO WRITE-MSG-MSG                      
              SUBTRACT 7 FROM WS-RECV-LEN                               
           END-IF.                                                      
           ADD 5 TO WS-RECV-LEN.                                        
           EXEC CICS WRITEQ
                TD
                FROM(WRITE-MSG)
                LENGTH(WS-RECV-LEN)
                QUEUE(STDQ-NAME)
                RESP(WS-RESP)
           END-EXEC.                                                    
           EXEC CICS WRITEQ
                TS
                NOSUSPEND
                FROM(WRITE-MSG)
                LENGTH(WS-RECV-LEN)
                QUEUE(STSQ-NAME)
                RESP(WS-RESP)
           END-EXEC.                                                    
           If WS-FLAG = 'R' Then                                        
             EXEC CICS SEND
                  TEXT
                  WAIT
                  ERASE
                  FREEKB
                  FROM(FILLER-X)
                  LENGTH(1)
             END-EXEC.                                                  
           EXEC CICS RETURN
           END-EXEC.                                                    

## Variable Map:
WS-STARTCODE gettermapping wsStartcode
WS-STARTCODE settermapping wsStartcode = val
WS-STARTCODE PIC XX JavaType String
WS-RESP gettermapping wsResp
WS-RESP settermapping wsResp = val
WS-RESP PIC S9(8) JavaType int
WS-RECV-LEN gettermapping wsRecvLen
WS-RECV-LEN settermapping wsRecvLen = val
WS-RECV-LEN PIC S9(4) JavaType int
WS-RECV-DATA gettermapping wsRecv.getWsRecvData()
WS-RECV-DATA settermapping wsRecv.setWsRecvData(val)
WS-RECV-DATA PIC X(74) JavaType String
WS-RECV gettermapping wsRecv.getBytes()
WS-RECV settermapping wsRecv.setBytes(val)
WS-RECV GROUP JavaType WsRecv
WS-PRINSYSID gettermapping wsPrinsysid
WS-PRINSYSID settermapping wsPrinsysid = val
WS-PRINSYSID PIC XXXX JavaType String
WS-INVOKEPROG gettermapping wsInvokeprog
WS-INVOKEPROG settermapping wsInvokeprog = val
WS-INVOKEPROG PIC X(8) JavaType String
WS-FLAG gettermapping wsFlag
WS-FLAG settermapping wsFlag = val
WS-FLAG PIC X JavaType char
WRITE-MSG-SYSID gettermapping writeMsg.getWriteMsgSysid()
WRITE-MSG-SYSID settermapping writeMsg.setWriteMsgSysid(val)
WRITE-MSG-SYSID PIC X(4) JavaType String
WRITE-MSG-REST gettermapping filler1372.getWriteMsgRest()
WRITE-MSG-REST settermapping filler1372.setWriteMsgRest(val)
WRITE-MSG-REST PIC X(83) JavaType String
WRITE-MSG-MSG gettermapping writeMsg.getWriteMsgMsg()
WRITE-MSG-MSG settermapping writeMsg.setWriteMsgMsg(val)
WRITE-MSG-MSG PIC X(90) JavaType String
WRITE-MSG gettermapping writeMsg.getBytes()
WRITE-MSG settermapping writeMsg.setBytes(val)
WRITE-MSG GROUP JavaType WriteMsg
TEMPO gettermapping tempo
TEMPO settermapping tempo = val
TEMPO PIC X(90) JavaType String
STSQ-NAME gettermapping stsq.getStsqName()
STSQ-NAME settermapping stsq.setStsqName(val)
STSQ-NAME PIC X(8) JavaType String
STSQ-EXT gettermapping filler1375.getStsqExt()
STSQ-EXT settermapping filler1375.setStsqExt(val)
STSQ-EXT PIC X(4) JavaType String
STDQ-NAME gettermapping stdqName
STDQ-NAME settermapping stdqName = val
STDQ-NAME PIC X(4) JavaType String
FILLER-X gettermapping writeMsg.getFillerX()
FILLER-X settermapping writeMsg.setFillerX(val)
FILLER-X PIC X JavaType char
COMMA-DATA gettermapping dfhcommarea.getCommaData()
COMMA-DATA settermapping dfhcommarea.setCommaData(val)
COMMA-DATA PIC X(90) JavaType String


## Class Map:
public void invokeMainline(Dfhcommarea dfhcommarea){
    Filler1372 filler1372 = new Filler1372();
    Filler1375 filler1375 = new Filler1375();
    String stdqName = "CSMT";
    Stsq stsq = new Stsq();
    String tempo = "";
    WriteMsg writeMsg = new WriteMsg();
    char wsFlag = ' ';
    String wsInvokeprog = "";
    String wsPrinsysid = "";
    WsRecv wsRecv = new WsRecv();
    int wsRecvLen = 80;
    int wsResp;
    String wsStartcode = "";
}


Output:
