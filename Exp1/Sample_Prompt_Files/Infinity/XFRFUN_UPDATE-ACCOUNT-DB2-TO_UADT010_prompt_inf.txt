translate code from cobol to java


Input:
DEMO-TASKA.
 
 * This is prompt example 1 *  
MOVE 'HELLO WORLD' TO VA-TAB  
MOVE '45' TO CA-PAYMENT  
IF MAN-BOOKER IS EQUAL TO 24
 EXEC SQL
   INSERT INTO ADDR
             ( NUMBER,
               NAME)
      VALUES ( :SAN-NUM,
               :SHAP-VALUE)              
 END-EXEC
 IF SQLCODE NOT EQUAL 0
   PERFORM TRAN-RATE-INTERVAL
   EXEC STATEMENT1 END-EXEC
 END-IF
ENDIF
 EXEC SQL
        SET :SAN-NUM = IDENTITY_VAL_LOCAL() 
 END-EXEC 
 
 MOVE  SAN-NUM TO PY-RES-INT
 MOVE 25 TO MAN-BOOKER
 MOVE 20 TO AGE
 DISPLAY AGE
 EXIT.

## Variable Map:
VA-TAB gettermapping recordBook.getRetailName().getTabValue()
VA-TAB settermapping recordBook.getRetailName().setTabValue(val)
VA-TAB PIC X(20) JavaType String
MAN-BOOKER gettermapping markDanson.getPost().getManBooker() 
MAN-BOOKER settermapping markDanson.getPost().setManBooker(val) 
MAN-BOOKER PIC 9(3) JavaType int
CA-PAYMENT gettermapping this.getCaPayment()
CA-PAYMENT settermapping this.setCaPayment(val)
CA-PAYMENT PIC 9(2) JavaType int
PY-RES-INT gettermapping this.getPyResInt()
PY-RES-INT settermapping this.setPyResInt(val)
PY-RES-INT PIC 99 JavaType int
SHAP-VALUE gettermapping this.retail.getShapValue()
SHAP-VALUE settermapping this.retail.setShapValue(val)
SHAP-VALUE PIC X(4) JavaType String
SAN-NUM gettermapping sanNum
SAN-NUM settermapping sanNum
SAN-NUM PIC 9(2) JavaType int
AGE gettermapping spa.getInt("age")
AGE settermapping spa.setInt("age", val)
AGE PIC 9(2) JavaType int
TRAN-RATE-INTERVAL, markDanson.tranInterval(reportVal)

## Class Map:
void demoTaskA(int sanNum){
    bookShop markDanson =  new BookShop();
}

Output:
void demoTaskA(int sanNum) {
    bookShop markDanson =  new BookShop();
    /* This is prompt example 1 */ 
    recordBook.getRetailName().setTabValue("HELLO WORLD");
    this.setCaPayment(Integer.parseInt("45"));        
   
    if (markDanson.getPost().getManBooker() == 24) {
    try {
        String sql = "INSERT INTO ADDR(NUMBER, NAME)values(?, ?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);
        ps.setInt(1, sanNum);
        ps.setString(2, this.retail.getShapValue());
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        markDanson.tranInterval(reportVal);
        return;
    }
    }
    try{
        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery("SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1");
        rs.next();
        sanNum = rs.getInt(1);
    }
    catch(SQLException exception){
        System.out.println(exception);
        return;
    }
    this.setPyResInt(sanNum);  
    markDanson.getPost().setManBooker(25);
    spa.setInt("age", 20);
    System.out.println( spa.getInt("age") );
}

Input:
BUZZ-VAL. 
* This is prompt example 2 * 
 IF CAN-BANK-VAL IS EQUAL TO 87
 EXEC SQL
   INSERT INTO BANK
             ( NUM,
               LOCATION)
      VALUES ( DEFAULT,
               :SYS-GERM)
 END-EXEC
 IF SQLCODE NOT EQUAL 0   
   MOVE '10' TO CA-SUM-ASSURED
   PERFORM PRINT-FUNCTION
   EXEC STATEMENT2 END-EXEC
 END-IF
END-IF
EXIT.

## Variable Map:
SYS-GERM gettermapping sysGerm
SYS-GERM settermapping sysGerm
SYS-GERM PIC X(5) JavaType String
CAN-BANK-VAL gettermapping bankVar.getCanBankVal()
CAN-BANK-VAL settermapping bankVar.setCanBankVal(val)
CAN-BANK-VAL 9(3) JavaType int
CA-SUM-ASSURED gettermapping this.getCaSumAssured()
CA-SUM-ASSURED settermapping this.setCaSumAssured(val)
CA-SUM-ASSURED PIC 99 JavaType int
PRINT-FUNCTION, this.printFunction(errReport)

## Class Map:
void buzzVal(String caRhNum){        
    int poll = 0;
}

Output:
void buzzVal(String caRhNum){
    int poll = 0;
   /* This is prompt example 2 */
   if (bankVar.getCanBankVal() == 87){
     try {
        String sql = "INSERT INTO BANK(LOCATION)values(?)";
        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        ps.setString(1, sysGerm);
        ps.executeUpdate();
        ps.close();
    }
    catch(SQLException exception) {
        this.setCaSumAssured(Integer.parseInt("10"));     
        this.printFunction(errReport);
        return;
     } 
   }
}

Input:
       UADT010.
           MOVE 'N' TO COMM-SUCCESS.
           INITIALIZE HOST-ACCOUNT-ROW.
           MOVE COMM-TACCNO TO DESIRED-ACC-NO.
           MOVE COMM-TSCODE TO DESIRED-SORT-CODE.
           MOVE DESIRED-SORT-CODE TO HV-ACCOUNT-SORTCODE.
           MOVE DESIRED-ACC-NO TO HV-ACCOUNT-ACC-NO.
           EXEC SQL
                SELECT ACCOUNT_EYECATCHER,
                ACCOUNT_CUSTOMER_NUMBER,
                ACCOUNT_SORTCODE,
                ACCOUNT_NUMBER,
                ACCOUNT_TYPE,
                ACCOUNT_INTEREST_RATE,
                ACCOUNT_OPENED,
                ACCOUNT_OVERDRAFT_LIMIT,
                ACCOUNT_LAST_STATEMENT,
                ACCOUNT_NEXT_STATEMENT,
                ACCOUNT_AVAILABLE_BALANCE,
                ACCOUNT_ACTUAL_BALANCE
                INTO  :HV-ACCOUNT-EYECATCHER,
                :HV-ACCOUNT-CUST-NO,
                :HV-ACCOUNT-SORTCODE,
                :HV-ACCOUNT-ACC-NO,
                :HV-ACCOUNT-ACC-TYPE,
                :HV-ACCOUNT-INT-RATE,
                :HV-ACCOUNT-OPENED,
                :HV-ACCOUNT-OVERDRAFT-LIM,
                :HV-ACCOUNT-LAST-STMT,
                :HV-ACCOUNT-NEXT-STMT,
                :HV-ACCOUNT-AVAIL-BAL,
                :HV-ACCOUNT-ACTUAL-BAL
                FROM ACCOUNT
                WHERE  (ACCOUNT_SORTCODE = :HV-ACCOUNT-SORTCODE AND
                ACCOUNT_NUMBER = :HV-ACCOUNT-ACC-NO)
           END-EXEC.
           IF SQLCODE NOT = 0
              MOVE 'N' TO COMM-SUCCESS
              PERFORM CHECK-FOR-STORM-DRAIN-DB2
              IF SQLCODE = +100
                 MOVE '2' TO COMM-FAIL-CODE
                 MOVE SQLCODE TO SQLCODE-DISPLAY
                 DISPLAY 'UPDATE UNABLE TO READ TO ACC'
                    HV-ACCOUNT-SORTCODE '/' HV-ACCOUNT-ACC-NO
                    ' ROLLBACK TO AVOID DATA INCONSISTENCY.'
                    'SQLCODE=' SQLCODE-DISPLAY
                 EXEC CICS SYNCPOINT
                      ROLLBACK
                      RESP(WS-CICS-RESP)
                      RESP2(WS-CICS-RESP2)
                 END-EXEC
                 IF WS-CICS-RESP IS NOT EQUAL TO DFHRESP(NORMAL)
                    INITIALIZE ABNDINFO-REC
                    MOVE EIBRESP    TO ABND-RESPCODE
                    MOVE EIBRESP2   TO ABND-RESP2CODE
                    EXEC CICS ASSIGN
                         APPLID(ABND-APPLID)
                    END-EXEC
                    MOVE EIBTASKN   TO ABND-TASKNO-KEY
                    MOVE EIBTRNID   TO ABND-TRANID
                    PERFORM POPULATE-TIME-DATE
                    MOVE WS-ORIG-DATE TO ABND-DATE
                    STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                          ':' DELIMITED BY SIZE,
                          WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                          ':' DELIMITED BY SIZE,
                          WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                          INTO ABND-TIME
                    END-STRING
                    MOVE WS-U-TIME   TO ABND-UTIME-KEY
                    MOVE 'HROL'      TO ABND-CODE
                    EXEC CICS ASSIGN
                         PROGRAM(ABND-PROGRAM)
                    END-EXEC
                    MOVE ZEROS      TO ABND-SQLCODE
                    STRING 'UAD010-TO - Error on SYNCPOINT ROLLBACK '
                         DELIMITED BY SIZE,
                         'after failing to read TO account'
                         DELIMITED BY SIZE,
                         ' EIBRESP=' DELIMITED BY SIZE,
                         ABND-RESPCODE DELIMITED BY SIZE,
                         ' RESP2=' DELIMITED BY SIZE,
                         ABND-RESP2CODE DELIMITED BY SIZE
                         INTO ABND-FREEFORM
                    END-STRING
                    EXEC CICS LINK
                         COMMAREA(ABNDINFO-REC)
                         PROGRAM(WS-ABEND-PGM)
                    END-EXEC
                    DISPLAY 'XFRFUN error syncpoint rollback after '
                           'failing to read TO account '
                           ',RESP=' WS-CICS-RESP
                           ',RESP2=' WS-CICS-RESP2
                    EXEC CICS ABEND
                         NODUMP
                         CANCEL
                         ABCODE('HROL')
                    END-EXEC
                 END-IF
                 GO TO UADT999
              ELSE
                 MOVE '3' TO COMM-FAIL-CODE
                 MOVE SQLCODE TO SQLCODE-DISPLAY
                 DISPLAY 'UPDATE UNABLE TO READ TO ACC'
                    HV-ACCOUNT-SORTCODE HV-ACCOUNT-ACC-NO
                    ' ABENDING TO AVOID DATA INCONSISTENCY. SQLCODE='
                    SQLCODE-DISPLAY
                    ' SQLERRD(3) IS ' SQLERRD(3)
                 IF SQLCODE = -911
                    IF SQLERRD(3) = 13172872
                       DISPLAY 'DEADLOCK DETECTED!'
                       ADD 1 TO DB2-DEADLOCK-RETRY
                       IF DB2-DEADLOCK-RETRY < 6
                          EXEC CICS SYNCPOINT
                               ROLLBACK
                               RESP(WS-CICS-RESP)
                               RESP2(WS-CICS-RESP2)
                          END-EXEC
                          IF WS-CICS-RESP IS NOT EQUAL TO
                          DFHRESP(NORMAL)
                             INITIALIZE ABNDINFO-REC
                             MOVE EIBRESP    TO ABND-RESPCODE
                             MOVE EIBRESP2   TO ABND-RESP2CODE
                             EXEC CICS ASSIGN
                                  APPLID(ABND-APPLID)
                             END-EXEC
                             MOVE EIBTASKN   TO ABND-TASKNO-KEY
                             MOVE EIBTRNID   TO ABND-TRANID
                             PERFORM POPULATE-TIME-DATE
                             MOVE WS-ORIG-DATE TO ABND-DATE
                             STRING WS-TIME-NOW-GRP-HH
                                DELIMITED BY SIZE,
                                ':' DELIMITED BY SIZE,
                                WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                                ':' DELIMITED BY SIZE,
                                WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                                INTO ABND-TIME
                             END-STRING
                             MOVE WS-U-TIME   TO ABND-UTIME-KEY
                             MOVE 'HROL'      TO ABND-CODE
                             EXEC CICS ASSIGN
                                  PROGRAM(ABND-PROGRAM)
                             END-EXEC
                             MOVE ZEROS      TO ABND-SQLCODE
                             STRING 'UAD010-TO(2) - Error on SYNCPOINT'
                                DELIMITED BY SIZE,
                                ' ROLLBACK after updating TO account'
                                DELIMITED BY SIZE,
                                ' EIBRESP=' DELIMITED BY SIZE,
                                ABND-RESPCODE DELIMITED BY SIZE,
                                ' RESP2=' DELIMITED BY SIZE,
                                ABND-RESP2CODE DELIMITED BY SIZE
                                INTO ABND-FREEFORM
                             END-STRING
                             EXEC CICS LINK
                                  COMMAREA(ABNDINFO-REC)
                                  PROGRAM(WS-ABEND-PGM)
                             END-EXEC
                             DISPLAY 'XFRFUN error syncpoint rollback'
                                ' after updating TO account '
                                ',RESP=' WS-CICS-RESP
                                ',RESP2=' WS-CICS-RESP2
                             EXEC CICS ABEND
                                  NODUMP
                                  CANCEL
                                  ABCODE('HROL')
                             END-EXEC
                          END-IF
                          EXEC CICS DELAY
                               FOR
                               SECONDS(1)
                          END-EXEC
                          GO TO UPDATE-ACCOUNT-DB2
                       END-IF
                    END-IF
                    IF SQLERRD(3) = 13172894
                       DISPLAY 'TIMEOUT DETECTED!'
                    END-IF
                    INITIALIZE ABNDINFO-REC
                    MOVE EIBRESP    TO ABND-RESPCODE
                    MOVE EIBRESP2   TO ABND-RESP2CODE
                    EXEC CICS ASSIGN
                         APPLID(ABND-APPLID)
                    END-EXEC
                    MOVE EIBTASKN   TO ABND-TASKNO-KEY
                    MOVE EIBTRNID   TO ABND-TRANID
                    PERFORM POPULATE-TIME-DATE
                    MOVE WS-ORIG-DATE TO ABND-DATE
                    STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                        ':' DELIMITED BY SIZE,
                        WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                        ':' DELIMITED BY SIZE,
                        WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                        INTO ABND-TIME
                    END-STRING
                    MOVE WS-U-TIME   TO ABND-UTIME-KEY
                    MOVE 'RUF2'      TO ABND-CODE
                    EXEC CICS ASSIGN
                         PROGRAM(ABND-PROGRAM)
                    END-EXEC
                    MOVE ZEROS      TO ABND-SQLCODE
                    IF SQLERRD(3) = 13172894
                       STRING 'UAD010-TO(3) - timeout detected '
                          DELIMITED BY SIZE,
                          ' EIBRESP=' DELIMITED BY SIZE,
                          ABND-RESPCODE DELIMITED BY SIZE,
                          'RESP2=' DELIMITED BY SIZE,
                          ABND-RESP2CODE DELIMITED BY SIZE
                          INTO ABND-FREEFORM
                       END-STRING
                    END-IF
                    EXEC CICS LINK
                         COMMAREA(ABNDINFO-REC)
                         PROGRAM(WS-ABEND-PGM)
                    END-EXEC
                    EXEC CICS ABEND
                         ABCODE('RUF2')
                    END-EXEC
              END-IF
           END-IF.
           COMPUTE HV-ACCOUNT-AVAIL-BAL = HV-ACCOUNT-AVAIL-BAL +
                   COMM-AMT.
           COMPUTE HV-ACCOUNT-ACTUAL-BAL = HV-ACCOUNT-ACTUAL-BAL +
                   COMM-AMT.
           EXEC SQL
                UPDATE ACCOUNT
                SET ACCOUNT_EYECATCHER        = :HV-ACCOUNT-EYECATCHER,
                ACCOUNT_CUSTOMER_NUMBER   = :HV-ACCOUNT-CUST-NO,
                ACCOUNT_SORTCODE          = :HV-ACCOUNT-SORTCODE,
                ACCOUNT_NUMBER            = :HV-ACCOUNT-ACC-NO,
                ACCOUNT_TYPE              = :HV-ACCOUNT-ACC-TYPE,
                ACCOUNT_INTEREST_RATE     = :HV-ACCOUNT-INT-RATE,
                ACCOUNT_OPENED            = :HV-ACCOUNT-OPENED,
                ACCOUNT_OVERDRAFT_LIMIT   = :HV-ACCOUNT-OVERDRAFT-LIM,
                ACCOUNT_LAST_STATEMENT    = :HV-ACCOUNT-LAST-STMT,
                ACCOUNT_NEXT_STATEMENT    = :HV-ACCOUNT-NEXT-STMT,
                ACCOUNT_AVAILABLE_BALANCE = :HV-ACCOUNT-AVAIL-BAL,
                ACCOUNT_ACTUAL_BALANCE    = :HV-ACCOUNT-ACTUAL-BAL
                WHERE (ACCOUNT_SORTCODE   = :HV-ACCOUNT-SORTCODE AND
                ACCOUNT_NUMBER         = :HV-ACCOUNT-ACC-NO)
           END-EXEC.
           IF SQLCODE NOT = 0
              MOVE SQLCODE TO SQLCODE-DISPLAY
              DISPLAY 'UNABLE TO UPDATE TO ACCOUNT.'
                 HV-ACCOUNT-SORTCODE HV-ACCOUNT-ACC-NO
                 'THE SQLCODE=' SQLCODE-DISPLAY
                 ' SQLERRD(3) ' SQLERRD(3)
              PERFORM CHECK-FOR-STORM-DRAIN-DB2
              IF SQLCODE = -911
                 IF SQLERRD(3) = 13172872
                    DISPLAY 'DEADLOCK DETECTED!'
                    ADD 1 TO DB2-DEADLOCK-RETRY
                    IF DB2-DEADLOCK-RETRY < 6
                       EXEC CICS SYNCPOINT
                            ROLLBACK
                            RESP(WS-CICS-RESP)
                            RESP2(WS-CICS-RESP2)
                       END-EXEC
                       IF WS-CICS-RESP IS NOT EQUAL TO DFHRESP(NORMAL)
                          INITIALIZE ABNDINFO-REC
                          MOVE EIBRESP    TO ABND-RESPCODE
                          MOVE EIBRESP2   TO ABND-RESP2CODE
                          EXEC CICS ASSIGN
                               APPLID(ABND-APPLID)
                          END-EXEC
                          MOVE EIBTASKN   TO ABND-TASKNO-KEY
                          MOVE EIBTRNID   TO ABND-TRANID
                          PERFORM POPULATE-TIME-DATE
                          MOVE WS-ORIG-DATE TO ABND-DATE
                          STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                             ':' DELIMITED BY SIZE,
                             WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                             ':' DELIMITED BY SIZE,
                             WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                             INTO ABND-TIME
                          END-STRING
                          MOVE WS-U-TIME   TO ABND-UTIME-KEY
                          MOVE 'HROL'      TO ABND-CODE
                          EXEC CICS ASSIGN
                               PROGRAM(ABND-PROGRAM)
                          END-EXEC
                          MOVE ZEROS      TO ABND-SQLCODE
                          STRING 'UAD010-TO(4) - Error on SYNCPOINT '
                             DELIMITED BY SIZE,
                             'ROLLBACK after Updating TO account'
                             DELIMITED BY SIZE,
                             ' EIBRESP=' DELIMITED BY SIZE,
                             ABND-RESPCODE DELIMITED BY SIZE,
                             ' RESP2=' DELIMITED BY SIZE,
                             ABND-RESP2CODE DELIMITED BY SIZE
                             INTO ABND-FREEFORM
                          END-STRING
                          EXEC CICS LINK
                               COMMAREA(ABNDINFO-REC)
                               PROGRAM(WS-ABEND-PGM)
                          END-EXEC
                          DISPLAY 'XFRFUN error syncpoint rollback '
                             ' after updating TO account '
                             ',RESP=' WS-CICS-RESP
                             ',RESP2=' WS-CICS-RESP2
                          EXEC CICS ABEND
                               NODUMP
                               CANCEL
                               ABCODE('HROL')
                          END-EXEC
                       END-IF
                       EXEC CICS DELAY
                            FOR
                            SECONDS(1)
                       END-EXEC
                       GO TO UPDATE-ACCOUNT-DB2
                    END-IF
                 END-IF
                 IF SQLERRD(3) = 13172872
                    DISPLAY 'TIMEOUT DETECTED!'
                 END-IF
              END-IF
              INITIALIZE ABNDINFO-REC
              MOVE EIBRESP    TO ABND-RESPCODE
              MOVE EIBRESP2   TO ABND-RESP2CODE
              EXEC CICS ASSIGN
                   APPLID(ABND-APPLID)
              END-EXEC
              MOVE EIBTASKN   TO ABND-TASKNO-KEY
              MOVE EIBTRNID   TO ABND-TRANID
              PERFORM POPULATE-TIME-DATE
              MOVE WS-ORIG-DATE TO ABND-DATE
              STRING WS-TIME-NOW-GRP-HH DELIMITED BY SIZE,
                        ':' DELIMITED BY SIZE,
                        WS-TIME-NOW-GRP-MM DELIMITED BY SIZE,
                        ':' DELIMITED BY SIZE,
                        WS-TIME-NOW-GRP-MM DELIMITED BY SIZE
                        INTO ABND-TIME
              END-STRING
              MOVE WS-U-TIME   TO ABND-UTIME-KEY
              MOVE 'RUF2'      TO ABND-CODE
              EXEC CICS ASSIGN
                   PROGRAM(ABND-PROGRAM)
              END-EXEC
              MOVE ZEROS      TO ABND-SQLCODE
              IF SQLERRD(3) = 13172872
                 STRING 'UAD010-TO(5) - timeout detected '
                       DELIMITED BY SIZE,
                       ' EIBRESP=' DELIMITED BY SIZE,
                       ABND-RESPCODE DELIMITED BY SIZE,
                       ' RESP2=' DELIMITED BY SIZE,
                       ABND-RESP2CODE DELIMITED BY SIZE
                       INTO ABND-FREEFORM
                 END-STRING
              END-IF
              EXEC CICS LINK
                   COMMAREA(ABNDINFO-REC)
                   PROGRAM(WS-ABEND-PGM)
              END-EXEC
              EXEC CICS ABEND
                   ABCODE('RUF3')
              END-EXEC
           END-IF.
           MOVE HV-ACCOUNT-AVAIL-BAL  TO COMM-TAVBAL.
           MOVE HV-ACCOUNT-ACTUAL-BAL TO COMM-TACTBAL.
           MOVE 'Y' TO COMM-SUCCESS.

## Variable Map:
WS-U-TIME gettermapping this.getWsUTime()
WS-U-TIME settermapping this.setWsUTime(val)
WS-U-TIME PIC S9(15) JavaType long
WS-TIME-NOW-GRP-MM gettermapping wsTimeNowGrp.getWsTimeNowGrpMm()
WS-TIME-NOW-GRP-MM settermapping wsTimeNowGrp.setWsTimeNowGrpMm(val)
WS-TIME-NOW-GRP-MM PIC 99 JavaType int
WS-TIME-NOW-GRP-HH gettermapping wsTimeNowGrp.getWsTimeNowGrpHh()
WS-TIME-NOW-GRP-HH settermapping wsTimeNowGrp.setWsTimeNowGrpHh(val)
WS-TIME-NOW-GRP-HH PIC 99 JavaType int
WS-ORIG-DATE gettermapping this.getWsOrigDate()
WS-ORIG-DATE settermapping this.setWsOrigDate(val)
WS-ORIG-DATE PIC X(10) JavaType String
WS-CICS-RESP2 gettermapping wsCicsResp2
WS-CICS-RESP2 settermapping wsCicsResp2 = val
WS-CICS-RESP2 PIC S9(8) JavaType int
WS-CICS-RESP gettermapping wsCicsResp
WS-CICS-RESP settermapping wsCicsResp = val
WS-CICS-RESP PIC S9(8) JavaType int
WS-ABEND-PGM gettermapping wsAbendPgm
WS-ABEND-PGM settermapping wsAbendPgm = val
WS-ABEND-PGM PIC X(8) JavaType String
SQLERRD(i) gettermapping sqlerrd.get(i-1)
SQLERRD(i) settermapping sqlerrd.set(i-1, val)
SQLERRD(i) PIC S9(9) JavaType int
SQLCODE-DISPLAY gettermapping sqlcodeDisplay
SQLCODE-DISPLAY settermapping sqlcodeDisplay = val
SQLCODE-DISPLAY PIC S9(8) JavaType int
HV-ACCOUNT-SORTCODE gettermapping hostAccountRow.getHvAccountSortcode()
HV-ACCOUNT-SORTCODE settermapping hostAccountRow.setHvAccountSortcode(val)
HV-ACCOUNT-SORTCODE PIC X(6) JavaType String
HV-ACCOUNT-OVERDRAFT-LIM gettermapping hostAccountRow.getHvAccountOverdraftLim()
HV-ACCOUNT-OVERDRAFT-LIM settermapping hostAccountRow.setHvAccountOverdraftLim(val)
HV-ACCOUNT-OVERDRAFT-LIM PIC S9(9) JavaType int
HV-ACCOUNT-OPENED gettermapping hostAccountRow.getHvAccountOpened()
HV-ACCOUNT-OPENED settermapping hostAccountRow.setHvAccountOpened(val)
HV-ACCOUNT-OPENED PIC X(10) JavaType String
HV-ACCOUNT-NEXT-STMT gettermapping hostAccountRow.getHvAccountNextStmt()
HV-ACCOUNT-NEXT-STMT settermapping hostAccountRow.setHvAccountNextStmt(val)
HV-ACCOUNT-NEXT-STMT PIC X(10) JavaType String
HV-ACCOUNT-LAST-STMT gettermapping hostAccountRow.getHvAccountLastStmt()
HV-ACCOUNT-LAST-STMT settermapping hostAccountRow.setHvAccountLastStmt(val)
HV-ACCOUNT-LAST-STMT PIC X(10) JavaType String
HV-ACCOUNT-INT-RATE gettermapping hostAccountRow.getHvAccountIntRate()
HV-ACCOUNT-INT-RATE settermapping hostAccountRow.setHvAccountIntRate(val)
HV-ACCOUNT-INT-RATE PIC S9(4)V99 JavaType BigDecimal
HV-ACCOUNT-EYECATCHER gettermapping hostAccountRow.getHvAccountEyecatcher()
HV-ACCOUNT-EYECATCHER settermapping hostAccountRow.setHvAccountEyecatcher(val)
HV-ACCOUNT-EYECATCHER PIC X(4) JavaType String
HV-ACCOUNT-CUST-NO gettermapping hostAccountRow.getHvAccountCustNo()
HV-ACCOUNT-CUST-NO settermapping hostAccountRow.setHvAccountCustNo(val)
HV-ACCOUNT-CUST-NO PIC X(10) JavaType String
HV-ACCOUNT-AVAIL-BAL gettermapping hostAccountRow.getHvAccountAvailBal()
HV-ACCOUNT-AVAIL-BAL settermapping hostAccountRow.setHvAccountAvailBal(val)
HV-ACCOUNT-AVAIL-BAL PIC S9(10)V99 JavaType BigDecimal
HV-ACCOUNT-ACTUAL-BAL gettermapping hostAccountRow.getHvAccountActualBal()
HV-ACCOUNT-ACTUAL-BAL settermapping hostAccountRow.setHvAccountActualBal(val)
HV-ACCOUNT-ACTUAL-BAL PIC S9(10)V99 JavaType BigDecimal
HV-ACCOUNT-ACC-TYPE gettermapping hostAccountRow.getHvAccountAccType()
HV-ACCOUNT-ACC-TYPE settermapping hostAccountRow.setHvAccountAccType(val)
HV-ACCOUNT-ACC-TYPE PIC X(8) JavaType String
HV-ACCOUNT-ACC-NO gettermapping hostAccountRow.getHvAccountAccNo()
HV-ACCOUNT-ACC-NO settermapping hostAccountRow.setHvAccountAccNo(val)
HV-ACCOUNT-ACC-NO PIC X(8) JavaType String
HOST-ACCOUNT-ROW gettermapping hostAccountRow.getBytes()
HOST-ACCOUNT-ROW settermapping hostAccountRow.setBytes(val)
HOST-ACCOUNT-ROW GROUP JavaType HostAccountRow
DESIRED-SORT-CODE gettermapping desiredSortCode
DESIRED-SORT-CODE settermapping desiredSortCode = val
DESIRED-SORT-CODE PIC 9(6) JavaType int
DESIRED-ACC-NO gettermapping desiredAccNo
DESIRED-ACC-NO settermapping desiredAccNo = val
DESIRED-ACC-NO PIC 9(8) JavaType int
DB2-DEADLOCK-RETRY gettermapping db2DeadlockRetry
DB2-DEADLOCK-RETRY settermapping db2DeadlockRetry = val
DB2-DEADLOCK-RETRY PIC 999 JavaType int
COMM-TSCODE gettermapping dfhcommarea.getCommTscode()
COMM-TSCODE settermapping dfhcommarea.setCommTscode(val)
COMM-TSCODE PIC 9(6) JavaType int
COMM-TAVBAL gettermapping dfhcommarea.getCommTavbal()
COMM-TAVBAL settermapping dfhcommarea.setCommTavbal(val)
COMM-TAVBAL PIC S9(10)V99 JavaType BigDecimal
COMM-TACTBAL gettermapping dfhcommarea.getCommTactbal()
COMM-TACTBAL settermapping dfhcommarea.setCommTactbal(val)
COMM-TACTBAL PIC S9(10)V99 JavaType BigDecimal
COMM-TACCNO gettermapping dfhcommarea.getCommTaccno()
COMM-TACCNO settermapping dfhcommarea.setCommTaccno(val)
COMM-TACCNO PIC 9(8) JavaType int
COMM-SUCCESS gettermapping dfhcommarea.getCommSuccess()
COMM-SUCCESS settermapping dfhcommarea.setCommSuccess(val)
COMM-SUCCESS PIC X JavaType char
COMM-FAIL-CODE gettermapping dfhcommarea.getCommFailCode()
COMM-FAIL-CODE settermapping dfhcommarea.setCommFailCode(val)
COMM-FAIL-CODE PIC X JavaType char
COMM-AMT gettermapping dfhcommarea.getCommAmt()
COMM-AMT settermapping dfhcommarea.setCommAmt(val)
COMM-AMT PIC S9(10)V99 JavaType BigDecimal
ABNDINFO-REC gettermapping abndinfoRec.getBytes()
ABNDINFO-REC settermapping abndinfoRec.setBytes(val)
ABNDINFO-REC GROUP JavaType AbndinfoRec
ABND-UTIME-KEY gettermapping abndinfoRec.getAbndUtimeKey()
ABND-UTIME-KEY settermapping abndinfoRec.setAbndUtimeKey(val)
ABND-UTIME-KEY PIC S9(15) JavaType long
ABND-TRANID gettermapping abndinfoRec.getAbndTranid()
ABND-TRANID settermapping abndinfoRec.setAbndTranid(val)
ABND-TRANID PIC X(4) JavaType String
ABND-TIME gettermapping abndinfoRec.getAbndTime()
ABND-TIME settermapping abndinfoRec.setAbndTime(val)
ABND-TIME PIC X(8) JavaType String
ABND-TASKNO-KEY gettermapping abndinfoRec.getAbndTasknoKey()
ABND-TASKNO-KEY settermapping abndinfoRec.setAbndTasknoKey(val)
ABND-TASKNO-KEY PIC 9(4) JavaType int
ABND-SQLCODE gettermapping abndinfoRec.getAbndSqlcode()
ABND-SQLCODE settermapping abndinfoRec.setAbndSqlcode(val)
ABND-SQLCODE PIC S9(8) JavaType int
ABND-RESPCODE gettermapping abndinfoRec.getAbndRespcode()
ABND-RESPCODE settermapping abndinfoRec.setAbndRespcode(val)
ABND-RESPCODE PIC S9(8) JavaType int
ABND-RESP2CODE gettermapping abndinfoRec.getAbndResp2Code()
ABND-RESP2CODE settermapping abndinfoRec.setAbndResp2Code(val)
ABND-RESP2CODE PIC S9(8) JavaType int
ABND-PROGRAM gettermapping abndinfoRec.getAbndProgram()
ABND-PROGRAM settermapping abndinfoRec.setAbndProgram(val)
ABND-PROGRAM PIC X(8) JavaType String
ABND-FREEFORM gettermapping abndinfoRec.getAbndFreeform()
ABND-FREEFORM settermapping abndinfoRec.setAbndFreeform(val)
ABND-FREEFORM PIC X(600) JavaType String
ABND-DATE gettermapping abndinfoRec.getAbndDate()
ABND-DATE settermapping abndinfoRec.setAbndDate(val)
ABND-DATE PIC X(10) JavaType String
ABND-CODE gettermapping abndinfoRec.getAbndCode()
ABND-CODE settermapping abndinfoRec.setAbndCode(val)
ABND-CODE PIC X(4) JavaType String
ABND-APPLID gettermapping abndinfoRec.getAbndApplid()
ABND-APPLID settermapping abndinfoRec.setAbndApplid(val)
ABND-APPLID PIC X(8) JavaType String
UPDATE-ACCOUNT-DB2_UAD010, updateAccountDb2Uad010(dfhcommarea, sqlcodeDisplay)
POPULATE-TIME-DATE_PTD010, populateTimeDatePtd010()
CHECK-FOR-STORM-DRAIN-DB2_CFSDD010, checkForStormDrainDb2Cfsdd010(sqlcodeDisplay)

## Class Map:
public void updateAccountDb2ToUadt010(Dfhcommarea dfhcommarea){
    AbndinfoRec abndinfoRec = new AbndinfoRec();
    int db2DeadlockRetry;
    int desiredAccNo;
    int desiredSortCode;
    HostAccountRow hostAccountRow = new HostAccountRow();
    int sqlcodeDisplay;
    ArrayList<Integer> sqlerrd = Stream.generate(() -> 0).limit(6).collect(Collectors.toCollection(ArrayList::new));
    String wsAbendPgm = "ABNDPROC";
    int wsCicsResp;
    int wsCicsResp2;
    WsTimeNowGrp wsTimeNowGrp = new WsTimeNowGrp();
}


Output:
